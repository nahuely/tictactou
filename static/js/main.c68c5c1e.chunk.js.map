{"version":3,"sources":["components/header/index.jsx","components/footer/index.jsx","components/board/cell/index.jsx","components/board/index.jsx","components/range/index.jsx","components/timeline/index.jsx","components/button/index.jsx","components/controls/index.jsx","services/tictactoe.js","constants/game.js","App.jsx","index.js"],"names":["Header","react_default","a","createElement","className","Footer","Cell","_ref","onClick","position","value","winning","concat","defaultProps","Board","board","winningPosition","Object","entries","map","val","_val","slicedToArray","includes","parseInt","board_cell","key","renderCells","Range","min","max","onChange","type","step","defaultValue","e","target","Timeline","moves","range","length","toString","Button","text","Controls","onNewGame","components_button","winningPositions","getNewBoard","0","undefined","1","2","3","4","5","6","7","8","getAvailableSquares","j","x","i","Math","floor","random","shuffle","getCellsByPlayer","player","reduce","acc","_ref2","cell","push","isDraw","every","_ref3","_ref4","isAWinningPosition","squares","output","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","_ref7","_ref6","index","err","return","minmax","isMax","alpha","beta","evaluation","evaluate","emptySquares","score","Infinity","move","ev","objectSpread","defineProperty","SYMBOLS","freeze","o","PLAYERS","human","ai","GAME_RESULT","draw","App","state","game","gameResult","turn","currentPreviewPosition","getAIMove","toggleTurn","onChangeTimeline","pointer","includedMoves","_this","slice","newBoard","forEach","symbol","setState","newGame","firstPlayer","makeMove","_this$state","playerSquares","isThereAWin","toConsumableArray","getGameResultString","toUpperCase","onCellClick","_this$state2","shouldShowWinningPosition","_this$state3","_this$state4","this","_this$state5","_this$state6","header","components_board","timeline","controls","footer","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"0aAaeA,SAVA,WACb,OACEC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAChBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAd,OACMH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,sBAAhB,OADN,WCQSC,SAXA,WACb,OACEJ,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAAlB,gBAEEH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,4BAFf,aAIEH,EAAAC,EAAAC,cAAA,iCCLAG,SAAO,SAAAC,GAA2C,IAAxCC,EAAwCD,EAAxCC,QAASC,EAA+BF,EAA/BE,SAAUC,EAAqBH,EAArBG,MAAOC,EAAcJ,EAAdI,QACxC,OACEV,EAAAC,EAAAC,cAAA,OACEK,QAAS,kBAAMA,EAAQC,EAAUC,IACjCD,SAAUA,EACVL,UAAS,OAAAQ,OAASD,EAAU,iBAAmB,KAE9CD,KAUPJ,EAAKO,aAAe,CAClBL,QAAS,aACTE,MAAO,MAGMJ,QCEAQ,SAxBD,SAAAP,GAAyC,IAAtCC,EAAsCD,EAAtCC,QAASO,EAA6BR,EAA7BQ,MAAOC,EAAsBT,EAAtBS,gBAqB/B,OAAOf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SApBF,SAAAW,GAClB,OAAOE,OAAOC,QAAQH,GAAOI,IAAI,SAAAC,GAAO,IAAAC,EAAAJ,OAAAK,EAAA,EAAAL,CACZG,EADY,GAC/BX,EAD+BY,EAAA,GACrBX,EADqBW,EAAA,GAElCV,GAAU,EAKd,OAJIK,IACFL,EAAUK,EAAgBO,SAASC,SAASf,EAAU,MAItDR,EAAAC,EAAAC,cAACsB,EAAD,CACEC,IAAKjB,EACLD,QAASA,EACTC,SAAUA,EACVC,MAAOA,EACPC,QAASA,MAMcgB,CAAYZ,MCT9Ba,SAbD,SAAArB,GAAmC,IAAhCsB,EAAgCtB,EAAhCsB,IAAKC,EAA2BvB,EAA3BuB,IAAKpB,EAAsBH,EAAtBG,MAAOqB,EAAexB,EAAfwB,SAChC,OACE9B,EAAAC,EAAAC,cAAA,SACE6B,KAAK,QACLH,IAAKA,EACLC,IAAKA,EACLG,KAAK,IACLC,aAAcxB,EACdqB,SAAU,SAAAI,GAAC,OAAIJ,EAASI,EAAEC,OAAO1B,YCNjC2B,SAAW,SAAA9B,GAAyB,IAAtB+B,EAAsB/B,EAAtB+B,MAAOP,EAAexB,EAAfwB,SACzB,OACE9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAACoC,EAAD,CACEV,IAAI,IACJC,IAAKQ,EAAME,OAAOC,WAClB/B,MAAO4B,EAAME,OAAOC,WACpBV,SAAUA,OAWlBM,EAASxB,aAAe,CACtBL,QAAS,aACTE,MAAO,IAGM2B,QCxBTK,SAAS,SAAAnC,GAAuB,IAApBC,EAAoBD,EAApBC,QAASmC,EAAWpC,EAAXoC,KACzB,OACE1C,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASI,QAASA,GACjCmC,KAUPD,EAAO7B,aAAe,CACpBL,QAAS,aACTmC,KAAM,IAGOD,QCTAE,SATE,SAAArC,GAAmB,IAAhBsC,EAAgBtC,EAAhBsC,UAClB,OACE5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAC2C,EAAD,CAAQtC,QAAS,kBAAMqC,EAAU,UAAUF,KAAK,gBAChD1C,EAAAC,EAAAC,cAAC2C,EAAD,CAAQtC,QAAS,kBAAMqC,EAAU,OAAOF,KAAK,gBCL7CI,EAAmB,CACvB,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGHC,EAAc,iBAAO,CACzBC,OAAGC,EACHC,OAAGD,EACHE,OAAGF,EACHG,OAAGH,EACHI,OAAGJ,EACHK,OAAGL,EACHM,OAAGN,EACHO,OAAGP,EACHQ,OAAGR,IAcL,IAAMS,EAAsB,SAAA5C,GAC1B,OAZF,SAAiBb,GACf,IAAI0D,EAAGC,EAAGC,EACV,IAAKA,EAAI5D,EAAEsC,OAAS,EAAGsB,EAAI,EAAGA,IAC5BF,EAAIG,KAAKC,MAAMD,KAAKE,UAAYH,EAAI,IACpCD,EAAI3D,EAAE4D,GACN5D,EAAE4D,GAAK5D,EAAE0D,GACT1D,EAAE0D,GAAKC,EAET,OAAO3D,EAIAgE,CAAQC,EAAiBpD,OAAOmC,KAGnCiB,EAAmB,SAACpD,EAAOqD,GAC/B,OAAOnD,OAAOC,QAAQH,GAAOsD,OAAO,SAACC,EAAD/D,GAAwB,IAAAgE,EAAAtD,OAAAK,EAAA,EAAAL,CAAAV,EAAA,GAAjBiE,EAAiBD,EAAA,GAI1D,OAJ0DA,EAAA,KAC5CH,GACZE,EAAIG,KAAKjD,SAASgD,EAAM,KAEnBF,GACN,KAGCI,EAAS,SAAA3D,GAAK,OAClBE,OAAOC,QAAQH,GAAO4D,MAAM,SAAAC,GAAA,IAAAC,EAAA5D,OAAAK,EAAA,EAAAL,CAAA2D,EAAA,GAAAC,EAAA,eAA0B3B,IAA1B2B,EAAA,MAExBC,EAAqB,SAAAC,GACzB,IAAIC,GAAU,EADsBC,GAAA,EAAAC,GAAA,EAAAC,OAAAjC,EAAA,IAEpC,QAAAkC,EAAAC,EAAuCtC,EAAiB7B,UAAxDoE,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAmE,KAAAS,EAAAN,EAAA1E,MAAAiF,EAAA1E,OAAAK,EAAA,EAAAL,CAAAyE,EAAA,GAAvDE,EAAuDD,EAAA,GAIjE,GAJiEA,EAAA,GACjChB,MAAM,SAAAlE,GAAQ,OAC5CsE,EAAQxD,SAASd,KAEN,CACXuE,EAASY,EACT,QARgC,MAAAC,GAAAX,GAAA,EAAAC,EAAAU,EAAA,YAAAZ,GAAA,MAAAI,EAAAS,QAAAT,EAAAS,SAAA,WAAAZ,EAAA,MAAAC,GAWpC,OAAOH,GAaHe,EAAS,SAATA,EAAUhF,EAAOiF,EAAOC,EAAOC,GACnC,IAAMC,EAXS,SAACpF,EAAOqD,GACvB,IAAMW,EAAUZ,EAAiBpD,EAAOqD,GAGxC,OAFeU,EAAmBC,IAEpB,EAvEI,MAwETX,EAAyB,IAAM,GAEjC,EAIYgC,CAASrF,EAAOiF,EA7EpB,IADG,KA+EZK,EAAe1C,EAAoB5C,GAEzC,GAAIoF,EACF,MAAO,CAAEG,MAAOH,GAGlB,GAA4B,IAAxBE,EAAa7D,SAAiB2D,EAChC,MAAO,CAAEG,MAAO,GAGlB,GAAIN,EAAO,CAET,IADA,IAAIlE,EAAM,CAAEwE,OAAQC,IAAUC,KAAM,MAC3B3C,EAAI,EAAGA,EAAIwC,EAAa7D,OAAQqB,IAAK,CAC5C,IAAInD,EAAQ2F,EAAaxC,GACrB4C,EAAKV,EAAO9E,OAAAyF,EAAA,EAAAzF,CAAA,GAAKF,EAANE,OAAA0F,EAAA,EAAA1F,CAAA,GAAcP,EA7Ff,OA6FsC,EAAOuF,EAAOC,GAOlE,GANIO,EAAGH,MAAQxE,EAAIwE,QACjBxE,EAAIwE,MAAQG,EAAGH,MACfxE,EAAI0E,KAAO9F,GAITwF,IADJD,EAAQlC,KAAKjC,IAAImE,EAAOQ,EAAGH,QAEzB,MAGJ,OAAOxE,EAGP,IADA,IAAID,EAAM,CAAEyE,MAAQC,IAAUC,KAAM,MAC3B3C,EAAI,EAAGA,EAAIwC,EAAa7D,OAAQqB,IAAK,CAC5C,IAAInD,EAAQ2F,EAAaxC,GACrB4C,EAAKV,EAAO9E,OAAAyF,EAAA,EAAAzF,CAAA,GAAKF,EAANE,OAAA0F,EAAA,EAAA1F,CAAA,GAAcP,EA5GlB,OA4GsC,EAAMuF,EAAOC,GAO9D,GANIO,EAAGH,MAAQzE,EAAIyE,QACjBzE,EAAIyE,MAAQG,EAAGH,MACfzE,EAAI2E,KAAO9F,IAGbwF,EAAOnC,KAAKlC,IAAIqE,EAAMO,EAAGH,SACbL,EACV,MAGJ,OAAOpE,GCxHE+E,EAAU3F,OAAO4F,OAAO,CACnChD,EAAG,IACHiD,EAAG,MAGQC,EAAU9F,OAAO4F,OAAO,CACnCG,MAAO,QACPC,GAAI,OAGOC,EAAcjG,OAAO4F,OAAO,CACvChD,EAAG,IACHiD,EAAG,IACHK,KAAM,SCwJOC,oNA1JbC,MAAQ,CACNtG,MAAOuG,IACPC,WAAY,KACZC,KAAMT,EAAQC,MACd1E,MAAO,GACPtB,gBAAiB,KACjByG,uBAAwB,QAG1BC,UAAY,SAAA3G,GACV,OAAOuG,EAAArG,OAAAyF,EAAA,EAAAzF,CAAA,GAAiBF,IAAS,GAAQwF,IAAWA,QAmBtDoB,WAAa,SAAAvD,GAAM,OAAKA,IAAW2C,EAAQE,GAAKF,EAAQC,MAAQD,EAAQE,MAExEW,iBAAmB,SAAAC,GAAW,IAEtBC,EADYC,EAAKV,MAAf/E,MACoB0F,MAAM,EAAGH,GAC/BI,EAAWX,IAEjBQ,EAAcI,QAAQ,SAAA1B,GACpByB,EAASzB,EAAK/F,UAAY+F,EAAK2B,SAGjCJ,EAAKK,SAAS,CAAErH,MAAOkH,EAAUR,uBAAwBI,OAG3DQ,QAAU,SAAAC,GACRP,EAAKK,SAAS,CACZrH,MAAOuG,IACPE,KAAMc,EACNhG,MAAO,GACPiF,WAAY,KACZvG,gBAAiB,KACjByG,uBAAwB,UAI5Bc,SAAW,SAAC/B,EAAMpC,GAAW,IAAAoE,EACGT,EAAKV,MAA3B/E,EADmBkG,EACnBlG,MACR,IAF2BkG,EACZjB,WAEb,QAAarE,IAATsD,EAAoB,CACtB,IAAM2B,EAAS/D,IAAW2C,EAAQE,GAAKL,EAAQE,EAAIF,EAAQ/C,EACrDoE,EAAQhH,OAAAyF,EAAA,EAAAzF,CAAA,GAAQ8G,EAAKV,MAAMtG,MAAnBE,OAAA0F,EAAA,EAAA1F,CAAA,GAA2BuF,EAAO2B,IAE1CM,EAAgBnB,EAAsBW,EAAUE,GAChDO,EAAcpB,EAAwBmB,GACtC/D,EAAS4C,EAAYW,GAErBZ,EAAQ,CACZtG,MAAOkH,EACPT,KAAMO,EAAKJ,WAAWvD,GACtB9B,MAAMrB,OAAA0H,EAAA,EAAA1H,CAAKqB,GAAN1B,OAAA,CAAa,CAAEH,SAAU+F,EAAM2B,OAAQA,MAG1CO,GAAe,GACjBrB,EAAME,WAAaL,EAAYiB,GAC/Bd,EAAMrG,gBAAkBsG,EAAsBoB,IACrChE,IACT2C,EAAME,WAAaL,EAAYC,MAEjCY,EAAKK,SAASf,QAEdU,EAAKK,SAAS,CAAEb,WAAYL,EAAYC,UAK9CyB,oBAAsB,WAAM,IAClBrB,EAAeQ,EAAKV,MAApBE,WACJvC,EAAS,KAMb,OALIuC,IAAeL,EAAYrD,GAAK0D,IAAeL,EAAYJ,EAC7D9B,EAAM,iBAAApE,OAAoB2G,EAAWsB,cAA/B,iBACGtB,IAAeL,EAAYC,OACpCnC,EAAM,mCAEDA,KAGT8D,YAAc,SAACrI,EAAUC,GAAU,IAAAqI,EACJhB,EAAKV,MAA1BG,EADyBuB,EACzBvB,KAAMD,EADmBwB,EACnBxB,WACT7G,GAAU6G,GACbQ,EAAKQ,SAAS/G,SAASf,EAAU,IAAK+G,MAI1CwB,0BAA4B,WAAM,IAAAC,EAC2BlB,EAAKV,MAAxDrG,EADwBiI,EACxBjI,gBAAiByG,EADOwB,EACPxB,uBAAwBnF,EADjB2G,EACiB3G,MACjD,OAAItB,EAEAyG,GACAjG,SAASiG,EAAwB,MAAQnF,EAAME,OAExCxB,EACGyG,EAGL,KAFEzG,EAIJA,sFAtGW,IAAAkI,EACWC,KAAK9B,MAA1BG,EADU0B,EACV1B,KAAMD,EADI2B,EACJ3B,WACd,GAAIC,IAAST,EAAQE,KAAOM,EAAY,CACtC,IAAMf,EAAO2C,KAAKzB,UAALzG,OAAAyF,EAAA,EAAAzF,CAAA,GAAoBkI,KAAK9B,MAAMtG,QAC5CoI,KAAKZ,SAAS/B,EAAKA,KAAMgB,iDAIR,IAAA4B,EACUD,KAAK9B,MAA1BG,EADW4B,EACX5B,KAAMD,EADK6B,EACL7B,WACd,GAAIC,IAAST,EAAQE,KAAOM,EAAY,CACtC,IAAMf,EAAO2C,KAAKzB,UAALzG,OAAAyF,EAAA,EAAAzF,CAAA,GAAoBkI,KAAK9B,MAAMtG,QAC5CoI,KAAKZ,SAAS/B,EAAKA,KAAMgB,qCA6FpB,IAAA6B,EACsDF,KAAK9B,MAA1DtG,EADDsI,EACCtI,MAAOwG,EADR8B,EACQ9B,WAAYjF,EADpB+G,EACoB/G,MAAOmF,EAD3B4B,EAC2B5B,uBAClC,OACExH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAChBH,EAAAC,EAAAC,cAACmJ,EAAD,OAEFrJ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAACoJ,EAAD,CACE/I,QAAS2I,KAAKL,YACd/H,MAAOA,EACPC,gBAAiBmI,KAAKH,8BAGvBzB,EACCtH,EAAAC,EAAAC,cAACqJ,EAAD,CACElH,MAAOA,EACPP,SAAUoH,KAAKvB,iBACflH,MAAO+G,IAEP,KACJxH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAAA,SAAIgJ,KAAKP,wBAEX3I,EAAAC,EAAAC,cAACsJ,EAAD,CAAU5G,UAAWsG,KAAKd,YAG9BpI,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAChBH,EAAAC,EAAAC,cAACuJ,EAAD,eApJQC,oBCLlBC,IAASC,OAAO5J,EAAAC,EAAAC,cAAC2J,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.c68c5c1e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.scss\";\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <h1 className=\"header__title\">\n        TIC <span className=\"header__title--red\">TAC</span> TOU\n      </h1>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"./style.scss\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      made with&nbsp;\n      <i className=\"icon ion-md-heart-empty\" />\n      &nbsp;by&nbsp;\n      <span>unknown</span>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./style.scss\";\n\nconst Cell = ({ onClick, position, value, winning }) => {\n  return (\n    <div\n      onClick={() => onClick(position, value)}\n      position={position}\n      className={`item${winning ? \" item--winning\" : \"\"}`}\n    >\n      {value}\n    </div>\n  );\n};\n\nCell.propTypes = {\n  onClick: PropTypes.func,\n  value: PropTypes.node\n};\n\nCell.defaultProps = {\n  onClick: () => {},\n  value: null\n};\n\nexport default Cell;\n","import React from \"react\";\nimport Cell from \"components/board/cell\";\nimport \"./style.scss\";\n\nconst Board = ({ onClick, board, winningPosition }) => {\n  const renderCells = board => {\n    return Object.entries(board).map(val => {\n      const [position, value] = val;\n      let winning = false;\n      if (winningPosition) {\n        winning = winningPosition.includes(parseInt(position, 10));\n      }\n      \n      return (\n        <Cell\n          key={position}\n          onClick={onClick}\n          position={position}\n          value={value}\n          winning={winning}\n        />\n      );\n    });\n  };\n\n  return <div className=\"board\">{renderCells(board)}</div>;\n};\n\nexport default Board;\n","import React from \"react\";\nimport \"./style.scss\";\n\nconst Range = ({ min, max, value, onChange }) => {\n  return (\n    <input\n      type=\"range\"\n      min={min}\n      max={max}\n      step=\"1\"\n      defaultValue={value}\n      onChange={e => onChange(e.target.value)}\n    />\n  );\n};\n\nexport default Range;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Range from \"components/range\";\nimport \"./style.scss\";\n\nconst Timeline = ({ moves, onChange }) => {\n  return (\n    <div className=\"timeline\">\n      <Range\n        min=\"0\"\n        max={moves.length.toString()}\n        value={moves.length.toString()}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nTimeline.propTypes = {\n  onClick: PropTypes.func,\n  value: PropTypes.string\n};\n\nTimeline.defaultProps = {\n  onClick: () => {},\n  value: \"\"\n};\n\nexport default Timeline;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./style.scss\";\n\nconst Button = ({ onClick, text }) => {\n  return (\n    <button className=\"button\" onClick={onClick}>\n      {text}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n  text: PropTypes.string\n};\n\nButton.defaultProps = {\n  onClick: () => {},\n  text: \"\"\n};\n\nexport default Button;\n","import React from \"react\";\nimport Button from \"components/button\";\nimport \"./style.scss\";\n\nconst Controls = ({ onNewGame }) => {\n  return (\n    <div className=\"controls\">\n      <Button onClick={() => onNewGame(\"human\")} text=\"HUMAN FIRST\" />\n      <Button onClick={() => onNewGame(\"ai\")} text=\"AI FIRST\" />\n    </div>\n  );\n};\n\nexport default Controls;\n","const humanPlayer = \"x\";\nconst aiPlayer = \"o\";\n\nconst winningPositions = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  [0, 4, 8],\n  [2, 4, 6]\n];\n\nconst getNewBoard = () => ({\n  0: undefined,\n  1: undefined,\n  2: undefined,\n  3: undefined,\n  4: undefined,\n  5: undefined,\n  6: undefined,\n  7: undefined,\n  8: undefined\n});\n\nfunction shuffle(a) {\n  var j, x, i;\n  for (i = a.length - 1; i > 0; i--) {\n    j = Math.floor(Math.random() * (i + 1));\n    x = a[i];\n    a[i] = a[j];\n    a[j] = x;\n  }\n  return a;\n}\n\nconst getAvailableSquares = board => {\n  return shuffle(getCellsByPlayer(board, undefined));\n};\n\nconst getCellsByPlayer = (board, player) => {\n  return Object.entries(board).reduce((acc, [cell, value]) => {\n    if (value === player) {\n      acc.push(parseInt(cell, 10));\n    }\n    return acc;\n  }, []);\n};\n\nconst isDraw = board =>\n  Object.entries(board).every(([_, value]) => value !== undefined);\n\nconst isAWinningPosition = squares => {\n  let output = -1;\n  for (const [index, winningSequence] of winningPositions.entries()) {\n    const winning = winningSequence.every(position =>\n      squares.includes(position)\n    );\n    if (winning) {\n      output = index;\n      break;\n    }\n  }\n  return output;\n};\n\nconst evaluate = (board, player) => {\n  const squares = getCellsByPlayer(board, player);\n  const output = isAWinningPosition(squares);\n\n  if (output > -1) {\n    return player === humanPlayer ? 10 : -10;\n  }\n  return 0;\n};\n\nconst minmax = (board, isMax, alpha, beta) => {\n  const evaluation = evaluate(board, isMax ? aiPlayer : humanPlayer);\n  const emptySquares = getAvailableSquares(board);\n\n  if (evaluation) {\n    return { score: evaluation };\n  }\n\n  if (emptySquares.length === 0 && !evaluation) {\n    return { score: 0 };\n  }\n\n  if (isMax) {\n    let max = { score: -Infinity, move: null };\n    for (let x = 0; x < emptySquares.length; x++) {\n      let value = emptySquares[x];\n      let ev = minmax({ ...board, [value]: humanPlayer }, false, alpha, beta);\n      if (ev.score > max.score) {\n        max.score = ev.score;\n        max.move = value;\n      }\n\n      alpha = Math.max(alpha, ev.score);\n      if (beta <= alpha) {\n        break;\n      }\n    }\n    return max;\n  } else {\n    let min = { score: +Infinity, move: null };\n    for (let x = 0; x < emptySquares.length; x++) {\n      let value = emptySquares[x];\n      let ev = minmax({ ...board, [value]: aiPlayer }, true, alpha, beta);\n      if (ev.score < min.score) {\n        min.score = ev.score;\n        min.move = value;\n      }\n\n      beta = Math.min(beta, ev.score);\n      if (beta <= alpha) {\n        break;\n      }\n    }\n    return min;\n  }\n};\n\nexport {\n  getNewBoard,\n  winningPositions,\n  minmax,\n  getAvailableSquares,\n  isAWinningPosition,\n  getCellsByPlayer,\n  isDraw\n};\n","export const SYMBOLS = Object.freeze({\n  x: \"x\",\n  o: \"o\"\n});\n\nexport const PLAYERS = Object.freeze({\n  human: \"human\",\n  ai: \"ai\"\n});\n\nexport const GAME_RESULT = Object.freeze({\n  x: \"x\",\n  o: \"o\",\n  draw: \"draw\"\n});\n","import React, { Component } from \"react\";\nimport Header from \"components/header\";\nimport Footer from \"components/footer\";\nimport Board from \"components/board\";\nimport Timeline from \"components/timeline\";\nimport Controls from \"components/controls\";\nimport * as game from \"services/tictactoe\";\nimport { SYMBOLS, PLAYERS, GAME_RESULT } from \"constants/game\";\nimport \"./layout.scss\";\n\nclass App extends Component {\n  state = {\n    board: game.getNewBoard(),\n    gameResult: null,\n    turn: PLAYERS.human,\n    moves: [],\n    winningPosition: null,\n    currentPreviewPosition: null\n  };\n\n  getAIMove = board => {\n    return game.minmax({ ...board }, false, -Infinity, +Infinity);\n  };\n\n  componentDidMount() {\n    const { turn, gameResult } = this.state;\n    if (turn === PLAYERS.ai && !gameResult) {\n      const move = this.getAIMove({ ...this.state.board });\n      this.makeMove(move.move, turn);\n    }\n  }\n\n  componentDidUpdate() {\n    const { turn, gameResult } = this.state;\n    if (turn === PLAYERS.ai && !gameResult) {\n      const move = this.getAIMove({ ...this.state.board });\n      this.makeMove(move.move, turn);\n    }\n  }\n\n  toggleTurn = player => (player === PLAYERS.ai ? PLAYERS.human : PLAYERS.ai);\n\n  onChangeTimeline = pointer => {\n    const { moves } = this.state;\n    const includedMoves = moves.slice(0, pointer);\n    const newBoard = game.getNewBoard();\n\n    includedMoves.forEach(move => {\n      newBoard[move.position] = move.symbol;\n    });\n\n    this.setState({ board: newBoard, currentPreviewPosition: pointer });\n  };\n\n  newGame = firstPlayer => {\n    this.setState({\n      board: game.getNewBoard(),\n      turn: firstPlayer,\n      moves: [],\n      gameResult: null,\n      winningPosition: null,\n      currentPreviewPosition: null\n    });\n  };\n\n  makeMove = (move, player) => {\n    const { moves, gameResult } = this.state;\n    if (!gameResult) {\n      if (move !== undefined) {\n        const symbol = player === PLAYERS.ai ? SYMBOLS.o : SYMBOLS.x;\n        const newBoard = { ...this.state.board, [move]: symbol };\n\n        const playerSquares = game.getCellsByPlayer(newBoard, symbol);\n        const isThereAWin = game.isAWinningPosition(playerSquares);\n        const isDraw = game.isDraw(newBoard);\n\n        const state = {\n          board: newBoard,\n          turn: this.toggleTurn(player),\n          moves: [...moves, { position: move, symbol: symbol }]\n        };\n\n        if (isThereAWin > -1) {\n          state.gameResult = GAME_RESULT[symbol];\n          state.winningPosition = game.winningPositions[isThereAWin];\n        } else if (isDraw) {\n          state.gameResult = GAME_RESULT.draw;\n        }\n        this.setState(state);\n      } else {\n        this.setState({ gameResult: GAME_RESULT.draw });\n      }\n    }\n  };\n\n  getGameResultString = () => {\n    const { gameResult } = this.state;\n    let output = null;\n    if (gameResult === GAME_RESULT.x || gameResult === GAME_RESULT.o) {\n      output = `The winner is ${gameResult.toUpperCase()} 🎉`;\n    } else if (gameResult === GAME_RESULT.draw) {\n      output = `The game was a TIE 🐻`;\n    }\n    return output;\n  };\n\n  onCellClick = (position, value) => {\n    const { turn, gameResult } = this.state;\n    if (!value && !gameResult) {\n      this.makeMove(parseInt(position, 10), turn);\n    }\n  };\n\n  shouldShowWinningPosition = () => {\n    const { winningPosition, currentPreviewPosition, moves } = this.state;\n    if (winningPosition) {\n      if (\n        currentPreviewPosition &&\n        parseInt(currentPreviewPosition, 10) === moves.length\n      ) {\n        return winningPosition;\n      } else if (!currentPreviewPosition) {\n        return winningPosition;\n      }\n      return null;\n    }\n    return winningPosition;\n  };\n\n  render() {\n    const { board, gameResult, moves, currentPreviewPosition } = this.state;\n    return (\n      <div className=\"app\">\n        <header className=\"app__header\">\n          <Header />\n        </header>\n        <main className=\"app__content\">\n          <div className=\"app__content__game\">\n            <Board\n              onClick={this.onCellClick}\n              board={board}\n              winningPosition={this.shouldShowWinningPosition()}\n            />\n\n            {gameResult ? (\n              <Timeline\n                moves={moves}\n                onChange={this.onChangeTimeline}\n                value={currentPreviewPosition}\n              />\n            ) : null}\n            <div className=\"app__content__game__result\">\n              <p>{this.getGameResultString()}</p>\n            </div>\n            <Controls onNewGame={this.newGame} />\n          </div>\n        </main>\n        <footer className=\"app__footer\">\n          <Footer />\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./normalize.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}